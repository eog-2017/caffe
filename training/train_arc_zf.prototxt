name: "train_arc_zf.prototxt"

layer {
  name: "data"
  type: "ImageTripletData"
  top: "anchor"
  top: "positive"
  top: "negative"
  image_data_param{
    root_folder: "/media/arc-2017/data/ashish/isl-workspace/apc_new_objects_tote_data/rcnn_dataset/ARC2017Data/"
    source: "train.txt"
    batch_size: 1
    shuffle: true
    new_height: 224
    new_width: 224
  }
  transform_param {
    mean_value: 97.594
    mean_value: 93.197
    mean_value: 173.815
    mirror: false
    crop_size: 224
  }
  include {
    phase: TRAIN
  }
}

#========= conv1-conv5 ============

layer {
	name: "conv1"
	type: "Convolution"
	bottom: "anchor"
	top: "conv1"
  	param {
    	name: "conv1_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv1_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
        	weight_filler {
      			type: "xavier"
    		}
    		bias_filler {
      		type: "constant"
    		}
	}
}
layer {
	name: "relu1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "conv1"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv2"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2"
  	param {
    	name: "conv2_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv2_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
	}
}
layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "conv2"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3"
  	param {
    	name: "conv3_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv3_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu3"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}
layer {
	name: "conv4"
	type: "Convolution"
	bottom: "conv3"
	top: "conv4"
  	param {
    	name: "conv4_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv4_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu4"
	type: "ReLU"
	bottom: "conv4"
	top: "conv4"
}
layer {
	name: "conv5"
	type: "Convolution"
	bottom: "conv4"
	top: "conv5"
  	param {
    	name: "conv5_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv5_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu5"
	type: "ReLU"
	bottom: "conv5"
	top: "conv5"
}
layer {
  	name: "ip1"
  	type: "InnerProduct"
  	bottom: "conv5"
  	top: "ip1"
  	param {
    		name: "ip1_w"
    		lr_mult: 1
  	}
  	param {
    		name: "ip1_b"
    		lr_mult: 2
  	}
  	inner_product_param {
    	num_output: 2048
    	weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      		type: "constant"
    	}
  }
}
layer {
	name: "relu6"
	type: "ReLU"
	bottom: "ip1"
	top: "ip1"
}
layer {
  	name: "ip2"
  	type: "InnerProduct"
  	bottom: "ip1"
  	top: "ip2"
  	param {
    		name: "ip2_w"
    		lr_mult: 1
  	}
  	param {
    		name: "ip2_b"
    		lr_mult: 2
  	}
  	inner_product_param {
    	num_output: 256
    	weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      		type: "constant"
    	}
  }
}

#========= conv1-conv5 for positive ============

layer {
	name: "conv1_p"
	type: "Convolution"
	bottom: "positive"
	top: "conv1_p"
  	param {
    	name: "conv1_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv1_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
        weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      	type: "constant"
    	}
	}
}
layer {
	name: "relu1_p"
	type: "ReLU"
	bottom: "conv1_p"
	top: "conv1_p"
}

layer {
	name: "pool1_p"
	type: "Pooling"
	bottom: "conv1_p"
	top: "pool1_p"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv2_p"
	type: "Convolution"
	bottom: "pool1_p"
	top: "conv2_p"
  	param {
    	name: "conv2_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv2_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
	}
}
layer {
	name: "relu2_p"
	type: "ReLU"
	bottom: "conv2_p"
	top: "conv2_p"
}

layer {
	name: "pool2_p"
	type: "Pooling"
	bottom: "conv2_p"
	top: "pool2_p"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv3_p"
	type: "Convolution"
	bottom: "pool2_p"
	top: "conv3_p"
  	param {
    	name: "conv3_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv3_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu3_p"
	type: "ReLU"
	bottom: "conv3_p"
	top: "conv3_p"
}
layer {
	name: "conv4_p"
	type: "Convolution"
	bottom: "conv3_p"
	top: "conv4_p"
  	param {
    	name: "conv4_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv4_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu4_p"
	type: "ReLU"
	bottom: "conv4_p"
	top: "conv4_p"
}
layer {
	name: "conv5_p"
	type: "Convolution"
	bottom: "conv4_p"
	top: "conv5_p"
  	param {
    	name: "conv5_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv5_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu5_p"
	type: "ReLU"
	bottom: "conv5_p"
	top: "conv5_p"
}
layer {
  	name: "ip1_p"
  	type: "InnerProduct"
  	bottom: "conv5_p"
  	top: "ip1_p"
  	param {
    		name: "ip1_w"
    		lr_mult: 1
  	}
  	param {
    		name: "ip1_b"
    		lr_mult: 2
  	}
  	inner_product_param {
    	num_output: 2048
    	weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      		type: "constant"
    	}
  }
}
layer {
	name: "relu6_p"
	type: "ReLU"
	bottom: "ip1_p"
	top: "ip1_p"
}
layer {
  	name: "ip2_p"
  	type: "InnerProduct"
  	bottom: "ip1_p"
  	top: "ip2_p"
  	param {
    		name: "ip2_w"
    		lr_mult: 1
  	}
  	param {
    		name: "ip2_b"
    		lr_mult: 2
  	}
  	inner_product_param {
    	num_output: 256
    	weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      		type: "constant"
    	}
  }
}

#========= conv1-conv5 for positive ============

layer {
	name: "conv1_n"
	type: "Convolution"
	bottom: "negative"
	top: "conv1_n"
  	param {
    	name: "conv1_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv1_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
        weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      	type: "constant"
    	}
	}
}
layer {
	name: "relu1_n"
	type: "ReLU"
	bottom: "conv1_n"
	top: "conv1_n"
}

layer {
	name: "pool1_n"
	type: "Pooling"
	bottom: "conv1_n"
	top: "pool1_n"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv2_n"
	type: "Convolution"
	bottom: "pool1_n"
	top: "conv2_n"
  	param {
    	name: "conv2_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv2_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
	}
}
layer {
	name: "relu2_n"
	type: "ReLU"
	bottom: "conv2_n"
	top: "conv2_n"
}
layer {
	name: "pool2_n"
	type: "Pooling"
	bottom: "conv2_n"
	top: "pool2_n"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv3_n"
	type: "Convolution"
	bottom: "pool2_n"
	top: "conv3_n"
  	param {
    	name: "conv3_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv3_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu3_n"
	type: "ReLU"
	bottom: "conv3_n"
	top: "conv3_n"
}
layer {
	name: "conv4_n"
	type: "Convolution"
	bottom: "conv3_n"
	top: "conv4_n"
  	param {
    	name: "conv4_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv4_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu4_n"
	type: "ReLU"
	bottom: "conv4_n"
	top: "conv4_n"
}
layer {
	name: "conv5_n"
	type: "Convolution"
	bottom: "conv4_n"
	top: "conv5_n"
  	param {
    	name: "conv5_w"
    	lr_mult: 1
  	}
  	param {
    	name: "conv5_b"
    	lr_mult: 2
  	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu5_n"
	type: "ReLU"
	bottom: "conv5_n"
	top: "conv5_n"
}
layer {
  	name: "ip1_n"
  	type: "InnerProduct"
  	bottom: "conv5_n"
  	top: "ip1_n"
  	param {
    		name: "ip1_w"
    		lr_mult: 1
  	}
  	param {
    		name: "ip1_b"
    		lr_mult: 2
  	}
  	inner_product_param {
    	num_output: 2048
    	weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      		type: "constant"
    	}
  }
}
layer {
	name: "relu6_n"
	type: "ReLU"
	bottom: "ip1_n"
	top: "ip1_n"
}
layer {
  	name: "ip2_n"
  	type: "InnerProduct"
  	bottom: "ip1_n"
  	top: "ip2_n"
  	param {
    		name: "ip2_w"
    		lr_mult: 1
  	}
  	param {
    		name: "ip2_b"
    		lr_mult: 2
  	}
  	inner_product_param {
    	num_output: 256
    	weight_filler {
      		type: "xavier"
    	}
    	bias_filler {
      		type: "constant"
    	}
  }
}
layer {
	name: "t_loss"
    type: "TripletLoss"
    bottom: "ip2"
    bottom: "ip2_p"
    bottom: "ip2_n"
    top: "loss"
    triplet_loss_param {
    	alpha: 0.4
    }
}
